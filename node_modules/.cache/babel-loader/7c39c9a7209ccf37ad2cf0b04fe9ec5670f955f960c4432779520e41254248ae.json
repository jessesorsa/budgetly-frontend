{"ast":null,"code":"import { loadToken } from \"../store/sessionStorage\";\nconst backendURL = \"https://e7ec9c2btrial-dev-budgetly-srv.cfapps.us10-001.hana.ondemand.com/rest/budgetly/v1\";\nconst loginURL = \"https://e7ec9c2btrial-dev-budgetly-srv.cfapps.us10-001.hana.ondemand.com\";\nconst hashPassword = async password => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(password);\n\n  // Perform the SHA-256 hash\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n\n  // Convert the hash to a hex string\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');\n  return hashHex;\n};\n\n/*\nget plan data by userid\ncreate plan\nget monthly data by planID\ncreate month in plan\n*/\n\nconst testApi = async () => {\n  console.log(\"fetch\");\n  const response = await fetch(`${backendURL}/test`, {\n    method: 'GET',\n    mode: 'no-cors'\n  });\n  console.log(response);\n  const res = await response.json();\n  return res;\n};\nconst signUp = async (firstName, lastName, email, password) => {\n  const hashedPassword = await hashPassword(password);\n  console.log(password);\n  console.log(hashedPassword);\n  const body = {\n    \"FirstName\": firstName,\n    \"LastName\": lastName,\n    \"Email\": email,\n    \"Password\": hashedPassword\n  };\n  console.log(body);\n  const response = await fetch(`${loginURL}/signUp`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  console.log(response);\n  const res = await response.json();\n  console.log(res);\n  return res;\n};\nconst login = async (email, password) => {\n  const hashedPassword = await hashPassword(password);\n  const body = {\n    \"Email\": email,\n    \"Password\": hashedPassword\n  };\n  console.log(body);\n  const response = await fetch(`${loginURL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  const res = await response.json();\n  console.log(res);\n  return res;\n};\nconst getPlan = async user_uuid => {\n  let res;\n  try {\n    const response = await fetch(`${backendURL}/budgetPlan/${user_uuid}`);\n    res = await response.json();\n  } catch (error) {\n    res = \"hello\";\n  }\n  return res;\n};\nconst createPlan = async (plan, userID) => {\n  const token = loadToken();\n  console.log(\"creating plan\");\n  console.log(token);\n  console.log(plan);\n  const budget = {\n    \"creteadBy\": userID,\n    \"modifiedBy\": userID,\n    \"name\": \"name\",\n    \"description\": \"desc\",\n    \"customerID\": userID\n  };\n  console.log(budget);\n  const budget_plan = await fetch(`${backendURL}/budgetPlan`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    body: JSON.stringify(budget)\n  });\n  const res1 = await budget_plan.json();\n  console.log(\"res1\", res1);\n  /*\n  const response = await fetch(`${backendURL}/monthlyPlan`, {\n      method: \"POST\",\n      headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n      },\n      body: JSON.stringify(plan)\n  });\n  const res = await response.json();\n    console.log(\"res\", res);\n  */\n  const res = \"hello\";\n  return res;\n};\nconst getMonth = async month_id => {\n  let res;\n  try {\n    const response = await fetch(`${backendURL}/month/${month_id}`);\n    res = await response.json();\n  } catch (error) {\n    res = \"hello\";\n  }\n  return res;\n};\nconst getMonths = async plan_id => {\n  const response = await fetch(`${backendURL}/monthlyPlan/${plan_id}`);\n  const res = await response.json();\n  return res;\n};\nconst createMonth = async (month, token) => {\n  const response = await fetch(`${backendURL}/monthlyPlan`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    body: month\n  });\n  const res = await response.json();\n  console.log(res);\n  return res;\n};\nconst createEvent = async eventData => {\n  const response = await fetch(`${backendURL}/event`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: eventData\n  });\n  const res = await response.json();\n  console.log(res);\n  return res;\n};\nexport { getPlan, createPlan, testApi, login, signUp, getMonth, getMonths, createEvent, createMonth };","map":{"version":3,"names":["loadToken","backendURL","loginURL","hashPassword","password","encoder","TextEncoder","data","encode","hashBuffer","crypto","subtle","digest","hashArray","Array","from","Uint8Array","hashHex","map","byte","toString","padStart","join","testApi","console","log","response","fetch","method","mode","res","json","signUp","firstName","lastName","email","hashedPassword","body","headers","JSON","stringify","login","getPlan","user_uuid","error","createPlan","plan","userID","token","budget","budget_plan","res1","getMonth","month_id","getMonths","plan_id","createMonth","month","createEvent","eventData"],"sources":["/Users/jessesorsa/Koulu/WWW Services/frontend/src/http-actions/http.js"],"sourcesContent":["import { loadToken } from \"../store/sessionStorage\";\n\nconst backendURL = \"https://e7ec9c2btrial-dev-budgetly-srv.cfapps.us10-001.hana.ondemand.com/rest/budgetly/v1\";\nconst loginURL = \"https://e7ec9c2btrial-dev-budgetly-srv.cfapps.us10-001.hana.ondemand.com\";\n\nconst hashPassword = async (password) => {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(password);\n\n    // Perform the SHA-256 hash\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n\n    // Convert the hash to a hex string\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');\n\n    return hashHex;\n};\n\n/*\nget plan data by userid\ncreate plan\nget monthly data by planID\ncreate month in plan\n*/\n\nconst testApi = async () => {\n    console.log(\"fetch\");\n    const response = await fetch(`${backendURL}/test`, {\n        method: 'GET',\n        mode: 'no-cors',\n    });\n    console.log(response)\n    const res = await response.json();\n    return res;\n}\n\nconst signUp = async (firstName, lastName, email, password) => {\n\n    const hashedPassword = await hashPassword(password);\n    console.log(password);\n    console.log(hashedPassword);\n\n    const body = { \"FirstName\": firstName, \"LastName\": lastName, \"Email\": email, \"Password\": hashedPassword }\n    console.log(body);\n\n    const response = await fetch(`${loginURL}/signUp`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n    });\n\n    console.log(response);\n    const res = await response.json();\n    console.log(res);\n    return res;\n}\n\nconst login = async (email, password) => {\n\n    const hashedPassword = await hashPassword(password);\n\n    const body = { \"Email\": email, \"Password\": hashedPassword }\n    console.log(body);\n\n    const response = await fetch(`${loginURL}/login`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n    });\n\n    const res = await response.json();\n    console.log(res);\n    return res;\n}\n\nconst getPlan = async (user_uuid) => {\n    let res;\n    try {\n        const response = await fetch(`${backendURL}/budgetPlan/${user_uuid}`);\n        res = await response.json();\n    } catch (error) {\n        res = \"hello\";\n    }\n    return res;\n}\n\nconst createPlan = async (plan, userID) => {\n\n    const token = loadToken();\n    console.log(\"creating plan\");\n    console.log(token)\n    console.log(plan);\n\n    const budget = {\n        \"creteadBy\": userID,\n        \"modifiedBy\": userID,\n        \"name\": \"name\",\n        \"description\": \"desc\",\n        \"customerID\": userID\n    }\n\n    console.log(budget);\n\n    const budget_plan = await fetch(`${backendURL}/budgetPlan`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(budget)\n    });\n\n    const res1 = await budget_plan.json();\n    console.log(\"res1\", res1);\n    /*\n    const response = await fetch(`${backendURL}/monthlyPlan`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(plan)\n    });\n    const res = await response.json();\n\n\n    console.log(\"res\", res);\n    */\n    const res = \"hello\";\n    return res;\n}\n\nconst getMonth = async (month_id) => {\n    let res;\n    try {\n        const response = await fetch(`${backendURL}/month/${month_id}`);\n        res = await response.json();\n    } catch (error) {\n        res = \"hello\";\n    }\n    return res;\n};\n\n\nconst getMonths = async (plan_id) => {\n    const response = await fetch(`${backendURL}/monthlyPlan/${plan_id}`);\n    const res = await response.json();\n    return res;\n}\n\nconst createMonth = async (month, token) => {\n    const response = await fetch(`${backendURL}/monthlyPlan`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        body: month\n    });\n    const res = await response.json();\n    console.log(res);\n    return res;\n}\n\n\nconst createEvent = async (eventData) => {\n    const response = await fetch(`${backendURL}/event`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: eventData\n    });\n    const res = await response.json();\n    console.log(res);\n    return res;\n}\n\nexport { getPlan, createPlan, testApi, login, signUp, getMonth, getMonths, createEvent, createMonth }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}